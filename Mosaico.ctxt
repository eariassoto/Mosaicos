#BlueJ class context
comment0.params=
comment0.target=Mosaico()
comment0.text=\r\n\ Instancia\ un\ nuevo\ mosaico\ "en\ blanco".\r\n
comment1.params=l\ p\ c1\ c2
comment1.target=Mosaico(int,\ int,\ java.awt.Color,\ java.awt.Color)
comment1.text=\r\n\ Instancia\ un\ nuevo\ mosaico\ con\ los\ parametros\ indicados.\r\n\r\n\ @param\ l\ tamano\ de\ la\ matriz\r\n\ @param\ p\ patron\ deseado\r\n
comment10.params=
comment10.target=java.lang.String\ getNomPatron()
comment10.text=\r\n\ Indica\ el\ nombre\ del\ patron\ que\ tiene\ el\ mosaico.\r\n\ \r\n\ @return\ hilera\ con\ el\ nombre.\r\n
comment11.params=l
comment11.target=void\ setLado(int)
comment11.text=\r\n\ Establece\ el\ tamano\ de\ la\ matriz\ y\ la\ inicializa.\r\n\ \r\n\ @param\ l\r\n\ \ \ \ \ \ \ \ \ \ \ \ el\ tamano\ del\ mosaico.\r\n
comment12.params=
comment12.target=int\ getLado()
comment12.text=\r\n\ Devuelve\ el\ tamano\ del\ mosaico.\r\n\ \r\n\ @return\ tamano\ de\ matriz.\r\n
comment13.params=
comment13.target=java.awt.Color[][]\ getMatrizMosaico()
comment13.text=\r\n\ Devuelve\ la\ matriz\ con\ el\ mosaico.\r\n\ \r\n\ @return\ the\ patron\r\n
comment14.params=m
comment14.target=java.awt.Color[][]\ transponerMatriz(java.awt.Color[][])
comment14.text=\r\n\ Transpone\ una\ matriz.\r\n\ \r\n\ @param\ m\r\n\ \ \ \ \ \ \ \ \ \ \ \ matriz\r\n\ @return\ matriz\ transpuesta\r\n
comment15.params=m
comment15.target=java.awt.Color[][]\ revertirFilasMatriz(java.awt.Color[][])
comment15.text=\r\n\ Revierte\ las\ filas\ de\ una\ matriz.\r\n\ \r\n\ @param\ m\r\n\ \ \ \ \ \ \ \ \ \ \ \ matriz\r\n\ @return\ nueva\ matriz\ con\ filas\ revertidas\r\n
comment16.params=m
comment16.target=java.awt.Color[][]\ revertirColumnasMatriz(java.awt.Color[][])
comment16.text=\r\n\ Revierte\ las\ columnas\ de\ una\ matriz.\r\n\ \r\n\ @param\ m\r\n\ \ \ \ \ \ \ \ \ \ \ \ matriz\r\n\ @return\ nueva\ matriz\ con\ columnas\ revertidas\r\n
comment17.params=o
comment17.target=void\ girarMosaico(int)
comment17.text=\r\n\ Gira\ la\ matriz\ con\ el\ mosaico.\r\n\r\n\ @param\ o\ the\ o\r\n
comment18.params=
comment18.target=int\ getMaxLado()
comment18.text=\r\n\ Indica\ que\ tan\ grande\ puede\ ser\ el\ mosaico.\r\n\r\n\ @return\ maximo\ de\ lado\r\n
comment19.params=
comment19.target=int\ getCantidadPatrones()
comment19.text=\r\n\ Devuelv\ la\ cantidad\ de\ patrones\ disponibles.\r\n\r\n\ @return\ cantidad\ de\ patrones\r\n
comment2.params=
comment2.target=void\ inicializarColores()
comment2.text=\r\n\ Inicializa\ los\ colores,\ pone\ gris\ y\ negro\ por\ default.\r\n
comment3.params=c1\ c2
comment3.target=void\ inicializarColores(java.awt.Color,\ java.awt.Color)
comment3.text=\r\n\ Inicializa\ los\ colores\ determinados\ por\ los\ parametros.\r\n\ @param\ c1\ color\ \#1\r\n\ @param\ c2\ color\ \#2\r\n
comment4.params=c
comment4.target=java.lang.String\ getCodigoColor(int)
comment4.text=\r\n\ Devuelve\ el\ codigo\ del\ color.\r\n\r\n\ @param\ c\ color\r\n\ @return\ codigo\r\n
comment5.params=
comment5.target=int\ getCantidadColores()
comment5.text=\r\n\ @return\ cantidad\ de\ colores\r\n\ \r\n
comment6.params=c\ opcion
comment6.target=void\ setColor(int,\ java.awt.Color)
comment6.text=\r\n\ Establece\ un\ color.\ El\ -1\ es\ para\ que\ concuerde\ con\ el\ indice\ del\ vector.\r\n\r\n\ @param\ c\ color\ deseado\r\n\ @param\ opcion\ the\ opcion\r\n
comment7.params=o
comment7.target=void\ setPatron(int)
comment7.text=\r\n\ Sets\ the\ patron.\r\n\r\n\ @param\ o\ the\ new\ patron\r\n
comment8.params=
comment8.target=void\ generarMosaico()
comment8.text=\r\n\ Crea\ un\ patron\ en\ la\ matriz.\r\n\r\n
comment9.params=
comment9.target=int\ getNumPatron()
comment9.text=\r\n\ Indica\ cual\ patron\ tiene\ el\ mosaico\ actual.\r\n\ \r\n\ @return\ numero\ de\ patron\r\n
numComments=20
